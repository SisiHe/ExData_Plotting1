plot(cars)
setwd("/Users/sisihe/Desktop/Sisi_Personal/Course/Coursera/DataScientist/ExploratoryData/Week1/project1/ExData_Plotting1")
data<-readRDS("data.rds")
head(data)
summary(data$Global_active_power)
sum(data$Global_active_power)
table(data$Global_active_power)
summary(data)
?devices
head(data)
with(data,hist(Global_active_power))
hist(data$Global_active_power)
data$Global_active_power<-as.numeric(data$Global_active_power)
head(data)
class(data$Global_active_power)
hist(data$Global_active_power)
quartz()
hist(data$Global_active_power,col="red")
tail(data)
data<-read.table("household_power_consumption 2.txt",sep=";",header=TRUE,stringsAsFactors = FALSE)
data$Date<-as.Date(data$Date,format="%d/%m/%Y")
data$date_time<-paste(data$Date,data$Time)
data$date_time<-strptime(data$date_time,format="%Y-%m-%d %H:%M:%S")
data_sub<-subset(data,Date=="2007-02-01|2007-02-02")
tail(data_sub)
data_sub<-subset(data,Date==c("2007-02-01","2007-02-02"))
data_sub<-subset(data,Date=="2007-02-01"|"2007-02-02")
data_sub<-subset(data,Date %in% c("2007-02-01","2007-02-02"))
data_sub<-subset(data,Date %in% c("2007-02-01","2007-02-02"))
data_sub
data_sub<-subset(data,subset = Date %in% c(2007-02-01,2007-02-02))
data_sub<-subset(data,subset = Date %in% as.Date(c("2007-02-01","2007-02-02")))
head(data_sub)
tail(data_sub)
saveRDS(data_sub,"data.rds")
setwd("/Users/sisihe/Desktop/Sisi_Personal/Course/Coursera/DataScientist/ExploratoryData/Week1/project1/ExData_Plotting1")
data<-readRDS("data.rds")
data$Global_active_power<-as.numeric(data$Global_active_power)
quartz()
hist(data$Global_active_power,col="red")
hist(data$Global_active_power,col="red",main="Global Active Power", xlab="Global Active Power (kilowatts)")
dev.curv()
dev.curv()
dev.cruv()
dev.curv()
?dev.copy
dev.copy(png,file="plot1.png")
dev.off()
setwd("/Users/sisihe/Desktop/Sisi_Personal/Course/Coursera/DataScientist/ExploratoryData/Week1/project1/ExData_Plotting1")
data<-readRDS("data.rds")
data$Global_active_power<-as.numeric(data$Global_active_power)
head(data)
with(data,plot(data_time,Global_active_power))
with(data,plot(date_time,Global_active_power))
?plot
with(data,plot(date_time,Global_active_power,type="l"))
with(data,plot(date_time,Global_active_power,type="l",ylab="Global Active Power (kilowatts)",xlab=""))
dev.copy(png,file="plot1.png")
dev.off()
dev.copy(png,file="plot2.png")
dev.off()
data<-readRDS("data.rds")
data$Global_active_power<-as.numeric(data$Global_active_power)
quartz()
hist(data$Global_active_power,col="red",main="Global Active Power", xlab="Global Active Power (kilowatts)")
dev.copy(png,file="plot1.png")
dev.off()
setwd("/Users/sisihe/Desktop/Sisi_Personal/Course/Coursera/DataScientist/ExploratoryData/Week1/project1/ExData_Plotting1")
data<-readRDS("data.rds")
class(data$Sub_metering_1)
data$Sub_metering_1<-as.numeric(data$Sub_metering_1)
data$Sub_metering_2<-as.numeric(data$Sub_metering_2)
data$Sub_metering_3<-as.numeric(data$Sub_metering_3)
head(data)
summary(data$Sub_metering_1)
summary(data$Sub_metering_2)
summary(data$Sub_metering_3)
?lines
quartz()
with(data,plot(date_time,Sub_metering_1,type="l",col="black"))
with(data,plot(date_time,Sub_metering_1,type="l",col="black",ylab="Energy sub metering"))
lines(data_time,Sub_metering_2,col="red")
lines(date_time,Sub_metering_2,col="red")
with(data,lines(date_time,Sub_metering_2,col="red"))
with(data,lines(date_time,Sub_metering_3,col="blue"))
with(data,plot(date_time,Sub_metering_1,type="l",col="black",ylab="Energy sub metering", xlab=""))
with(data,lines(date_time,Sub_metering_2,col="red"))
with(data,lines(date_time,Sub_metering_3,col="blue"))
?legend
legend("topright",lty="1",col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
legend("topright",lty=c("1","1","1"),col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
legend("topright",lty=2,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
legend("topright",lty=4,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
legend("topright",lty=0,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
quartz()
with(data,plot(date_time,Sub_metering_1,type="l",col="black",ylab="Energy sub metering", xlab=""))
with(data,lines(date_time,Sub_metering_2,col="red"))
with(data,lines(date_time,Sub_metering_3,col="blue"))
legend("topright",col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
legend("topright",lty=1,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
with(data,plot(date_time,Sub_metering_1,type="l",col="black",ylab="Energy sub metering", xlab=""))
with(data,lines(date_time,Sub_metering_2,col="red"))
with(data,lines(date_time,Sub_metering_3,col="blue"))
legend("topright",lty=1,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
ev.copy(png,file="plot3.png")
dev.off()
dev.copy(png,file="plot3.png")
dev.off()
quartz()
with(data,plot(date_time,Sub_metering_1,type="l",col="black",ylab="Energy sub metering", xlab=""))
with(data,lines(date_time,Sub_metering_2,col="red"))
with(data,lines(date_time,Sub_metering_3,col="blue"))
legend("topright",lty=1,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
dev.copy(png,file="plot3.png")
dev.off()
head(data)
class(data$Voltage)
data$Voltage<-as.numeric(data$Voltage)
head(data)
class(data$Voltage)
data$Global_reactive_power<-as.numeric(data$Global_reactive_power)
head(data)
quartz()
par(mfrow=c(2,2))
with(data,plot(date_time,Global_active_power,type="l",ylab="Global Active Power (kilowatts)",xlab=""))
with(data,plot(date_time,Voltage,type="l",ylab="Voltage",xlab="datetime"))
with(data,plot(date_time,Sub_metering_1,type="l",col="black",ylab="Energy sub metering", xlab=""))
with(data,lines(date_time,Sub_metering_2,col="red"))
with(data,lines(date_time,Sub_metering_3,col="blue"))
legend("topright",lty=1,col=c("black","red","blue"),legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
#Plot4
with(data,plot(date_time,Global_reactive_power,type="l",xlab="datetime",ylab="Global_reactive_power"))
dev.copy(png,file="plot4.png")
dev.off()
